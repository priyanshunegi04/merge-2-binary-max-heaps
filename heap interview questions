  void heapify(vector<int>&ans,int size, int i){
    
    int largest = i;
    int leftChild = 2*i + 1;        
    int rightChild = 2*i + 2;    
    
    if(leftChild<size && ans[largest] < ans[leftChild]){
        largest = leftChild;
    }    
      
    if(rightChild<size && ans[largest] < ans[rightChild]){
        largest = rightChild;
    }    
           
    if(largest!=i){
        swap(ans[largest], ans[i]);
        heapify(ans, size, largest);
    }    
        
    }
    vector<int> mergeHeaps(vector<int> &a, vector<int> &b, int n, int m) {
        // your code here
    //step1-> merge two arrays
        vector<int>ans;
        for(auto i:a){
            ans.push_back(i);
        }
        for(auto i:b){
            ans.push_back(i);
        }
        //step2------>
        int size= ans.size();
      for(int i= size/2-1; i>=0; i--){
                     
         heapify(ans,size, i);
        }
   return ans;
    }
